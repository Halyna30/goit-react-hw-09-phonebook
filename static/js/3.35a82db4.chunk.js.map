{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/FormContacts/FormContacts.module.scss","components/ContactItem/ContactItem.module.scss","components/ListContacts/ListContacts.module.scss","Redux/contacts/operations.js","Redux/contacts/contacts-selectors.js","components/FormContacts/FormContacts.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ListContacts/ListContacts.jsx","views/ContactsPage/ContactsPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFilter","state","contacts","filter","allContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","FormContacts","useState","setName","setNumber","useSelector","useDispatch","onSubmit","e","preventDefault","find","item","alert","operations","className","s","form","label","type","input","onChange","target","pattern","title","required","Button","disabled","btn","variant","color","Filter","changeFilter","ContactItem","onDelete","id","contactItem","onClick","handleDelete","ListContacts","useEffect","ul","map","Contacts"],"mappings":"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","file":"static/js/3.35a82db4.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__rVPCy\",\"input\":\"FormContacts_input__gevOx\",\"label\":\"FormContacts_label__3GYzM\",\"btn\":\"FormContacts_btn__3h33d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__15g2a\",\"btn\":\"ContactItem_btn__OsHWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ListContacts_ul__3_xw_\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const allContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [allContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport operations from '../../Redux/contacts/operations';\nimport { allContacts } from '../../Redux/contacts/contacts-selectors';\n\nimport s from './FormContacts.module.scss';\n\nconst FormContacts = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(allContacts);\n\n  const dispatch = useDispatch();\n  const onSubmit = user => dispatch(operations.addContact(user));\n\n  const handleChangeName = ({ target }) => setName(target.value);\n  const handleChangeNumber = ({ target }) => setNumber(target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '') {\n      return;\n    }\n\n    const isInContacts = items.find(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n    } else {\n      onSubmit({ name, number });\n    }\n\n    reset();\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          className={s.input}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={s.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <Button\n        type=\"submit\"\n        disabled={name === '' || number === '' ? true : false}\n        className={s.btn}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nFormContacts.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../Redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../Redux/contacts/actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <div className=\"container\">\n      <label className=\"label\">\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className=\"input\"\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, number, name } = contact;\n\n  const handleDelete = id => onDelete(id);\n\n  return (\n    <li key={id} id={id} className={s.contactItem}>\n      <p>\n        {name}: {number}\n      </p>\n      <Button\n        type=\"button\"\n        className={s.btn}\n        onClick={() => handleDelete(id)}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../Redux/contacts/operations';\nimport ContactItem from '../ContactItem';\nimport { getVisibleContacts } from '../../Redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ListContacts.module.scss';\n\nconst ListContacts = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const fetchContacts = () => dispatch(operations.fetchContacts());\n  const onDelete = id => dispatch(operations.deleteContact(id));\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  fetchContacts: PropTypes.func,\n};\n\nexport default ListContacts;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport operations from '../../Redux/contacts/operations';\nimport { getFilter } from '../../Redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../Redux/contacts/actions';\nimport FormContacts from '../../components/FormContacts';\nimport Filter from '../../components/Filter';\nimport ListContacts from '../../components/ListContacts';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const onAddContact = contact => dispatch(operations.addContact(contact));\n  const onChangeFilter = value => dispatch(changeFilter(value));\n  const filter = useSelector(getFilter);\n\n  return (\n    <>\n      <h2 className=\"title\">Add contact</h2>\n      <FormContacts onSubmit={onAddContact} />\n\n      <h2 className=\"title\">Contacts list</h2>\n      <Filter value={filter} onChange={onChangeFilter} />\n\n      <ListContacts />\n    </>\n  );\n};\n\nContacts.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onAddContact: PropTypes.func.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n"],"sourceRoot":""}